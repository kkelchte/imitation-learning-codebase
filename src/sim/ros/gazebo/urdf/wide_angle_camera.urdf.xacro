<?xml version="1.0"?>

<!-- http://gazebosim.org/tutorials?tut=wide_angle_camera&branch=wideanglecamera -->
<!-- http://gazebosim.org/tutorials?tut=ros_gzplugins -->

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:property name="M_PI" value="3.1415926535897931" />
    <xacro:property name="camera_link" value="0.02" />

    <xacro:macro name="camera_model" params="name parent *origin">
      <joint name="${name}_joint" type="fixed">
        <xacro:insert_block name="origin" />
        <parent link="${parent}"/>
        <child link="${name}_link"/>
      </joint>
      <!-- Camera -->
      <link name="camera_link">
        <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <box size="${camera_link} ${camera_link} ${camera_link}"/>
          </geometry>
        </collision>

        <visual>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <box size="${camera_link} ${camera_link} ${camera_link}"/>
          </geometry>
          <material name="red"/>
        </visual>

        <inertial>
          <mass value="1e-5" />
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
      </link>
    </xacro:macro>

    <xacro:macro name="wide_angle_camera" params="name parent *origin">
      <xacro:camera_model name="${name}" parent="${parent}">
        <xacro:insert_block name="origin" />
      </xacro:camera_model>

      <!-- camera -->
      <gazebo reference="camera_link">
        <!-- use camera type for rectified images and wideangle for fisheye effect -->
        <sensor type="wideanglecamera" name="camera1">
        <!-- <sensor type="camera" name="camera1">-->
          <update_rate>10.0</update_rate>
          <camera name="head">
            <!-- degrees horizontal field of view -->
            <horizontal_fov>3.14</horizontal_fov>
            <vertical_fov>3.14</vertical_fov>
            <image>
              <width>500</width>
              <height>500</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.02</near>
              <far>300</far>
            </clip>
<!--            <noise>-->
<!--              <type>gaussian</type>-->
<!--              &lt;!&ndash; Noise is sampled independently per pixel on each frame.-->
<!--                   That pixel's noise value is added to each of its color-->
<!--                   channels, which at that point lie in the range [0,1]. &ndash;&gt;-->
<!--              <mean>0.0</mean>-->
<!--              <stddev>0.007</stddev>-->
<!--            </noise>-->
<!--            <lens>-->
<!--              <type>gnomonical</type>-->
<!--              <scale_to_hfov>true</scale_to_hfov>-->
<!--              <cutoff_angle>1.5707</cutoff_angle>-->
<!--              <env_texture_size>512</env_texture_size>-->
<!--            </lens>-->

          </camera>
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>wa/camera</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>camera_link</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
          </plugin>
        </sensor>
        <turnGravityOff>true</turnGravityOff>
      </gazebo>
    </xacro:macro>
</robot>

